{{ define "eval_poly" }}
{{/*arguments: destination, monic, coefficients, variable*/}}
*{{$.dst}} = fp.Element{ {{printList last $.coefficients}} }

{{ if $.monic }}
{{$.dst}}.Add({{$.dst}}, {{$.x}})
{{ end }}

{{- range $i := slice reverse iterate len $.coefficients 1}}
{{$.dst}}.Mul({{$.dst}}, {{$.x}})
{{$.dst}}.Add({{$.dst}}, fp.Element{ {{printList index $.coefficients $i}} })
{{- end}}
{{end}}

{{ if notNil $.HashInfo.E1Prime }}
func isogeny_x_numerator(dst *fp.Element, x *fp.Element) {
    {{ template "eval_poly" dict "dst" "dst" "monic" false "coefficients" $.HashInfo.E1Prime.XMap.Num "x" "x" }}
}
{{ end }}