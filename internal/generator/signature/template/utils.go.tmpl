import (
	"math/big"

	"github.com/consensys/gnark-crypto/ecc/{{ .Name }}/fr"
)

// HashToInt converts a hash value to an integer. Per FIPS 186-4, Section 6.4,
// we use the left-most bits of the hash to match the bit-length of the order of
// the curve. This also performs Step 5 of SEC 1, Version 2.0, Section 4.1.3.
func HashToInt(hash []byte) *big.Int {
	if len(hash) > fr.Bytes {
		hash = hash[:fr.Bytes]
	}
	ret := new(big.Int).SetBytes(hash)
	excess := len(hash)*8 - fr.Bytes
	if excess > 0 {
		ret.Rsh(ret, uint(excess))
	}
	return ret
}
