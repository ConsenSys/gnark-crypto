// Copyright 2020 ConsenSys Software Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by consensys/gnark-crypto DO NOT EDIT

package koalabear

import (
	"math/bits"
)

// madd0 hi = a*b + c (discards lo bits)
func madd0(a, b, c uint32) (hi uint32) {
	var carry, lo uint32
	hi, lo = bits.Mul32(a, b)
	_, carry = bits.Add32(lo, c, 0)
	hi, _ = bits.Add32(hi, 0, carry)
	return
}

// madd1 hi, lo = a*b + c
func madd1(a, b, c uint32) (hi uint32, lo uint32) {
	var carry uint32
	hi, lo = bits.Mul32(a, b)
	lo, carry = bits.Add32(lo, c, 0)
	hi, _ = bits.Add32(hi, 0, carry)
	return
}

// madd2 hi, lo = a*b + c + d
func madd2(a, b, c, d uint32) (hi uint32, lo uint32) {
	var carry uint32
	hi, lo = bits.Mul32(a, b)
	c, carry = bits.Add32(c, d, 0)
	hi, _ = bits.Add32(hi, 0, carry)
	lo, carry = bits.Add32(lo, c, 0)
	hi, _ = bits.Add32(hi, 0, carry)
	return
}

func madd3(a, b, c, d, e uint32) (hi uint32, lo uint32) {
	var carry uint32
	hi, lo = bits.Mul32(a, b)
	c, carry = bits.Add32(c, d, 0)
	hi, _ = bits.Add32(hi, 0, carry)
	lo, carry = bits.Add32(lo, c, 0)
	hi, _ = bits.Add32(hi, e, carry)
	return
}
